/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.duan1.View.QLHD;

import com.mycompany.duan1.Entity.CTSach;
import com.mycompany.duan1.Entity.CartItem;
import com.mycompany.duan1.Entity.HoaDonChiTiet;
import com.mycompany.duan1.Entity.DotKhuyenMai;
import com.mycompany.duan1.Entity.HinhThucThanhToan;
import com.mycompany.duan1.Entity.HoaDon;
import com.mycompany.duan1.Entity.KhachHang;
import com.mycompany.duan1.Entity.NhanVien;
import com.mycompany.duan1.Entity.ThongTinChiTiet;
import com.mycompany.duan1.Entity.TrangThaiHoaDon;
import com.mycompany.duan1.Service.CTSachService;
import com.mycompany.duan1.Service.ChiTietHoaDonService;
import com.mycompany.duan1.Service.DotKhuyenMaiService;
import com.mycompany.duan1.Service.HinhThucThanhToanService;
import com.mycompany.duan1.Service.HoaDonService;
import com.mycompany.duan1.Service.Impl.CTSachServiceImpl;
import com.mycompany.duan1.Service.Impl.ChiTietHoaDonServiceImpl;
import com.mycompany.duan1.Service.Impl.DotKhuyenMaiServiceImpl;
import com.mycompany.duan1.Service.Impl.HinhThucThanhToanServiceImpl;
import com.mycompany.duan1.Service.Impl.HoaDonServiceImpl;
import com.mycompany.duan1.Service.Impl.KhachHangServiceImpl;
import com.mycompany.duan1.Service.KhachHangService;
import com.mycompany.duan1.Storage.SessionStorage;
import com.mycompany.duan1.View.MainJFrame;
import com.mycompany.duan1.View.QLHDJFrame;
import com.mycompany.duan1.View.QLHDJPanel;
import java.awt.BorderLayout;
import java.math.BigDecimal;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Optional;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import org.springframework.beans.BeanUtils;

/**
 *
 * @author Admin
 */
public class createHDJPanel extends javax.swing.JPanel {

    /**
     * Creates new form createHD
     */
    public List<CartItem> danhsachchon = new ArrayList<>();

    private HoaDonService hoadonservice = new HoaDonServiceImpl();
    private HinhThucThanhToanService hinhthucthanhtoanservice = new HinhThucThanhToanServiceImpl();
    private DotKhuyenMaiService dotkhuyenmaiservice = new DotKhuyenMaiServiceImpl();
    private KhachHangService khachhangservice = new KhachHangServiceImpl();
    private CTSachService ctsachservice = new CTSachServiceImpl();
    private ChiTietHoaDonService chitiethoadonservice = new ChiTietHoaDonServiceImpl();

    SimpleDateFormat sdf = new SimpleDateFormat("HH:mm dd/MM/yyyy");
    DefaultTableModel dtm;
    DefaultComboBoxModel dcbm;
    NhanVien NVLogin = SessionStorage.getLoggedInNhanVien();
    QLHDJFrame qlhdJframe;

    public createHDJPanel(QLHDJFrame qlhdJframe) {
        initComponents();
        this.qlhdJframe = qlhdJframe;
        //Set giao diện
        txtNhanVien.setText(NVLogin.getTen());
//        txtNhanVien.setText("abc");

        //set JpanelThongTinKH
        jpnThongTinKH.removeAll();
        jpnThongTinKH.setLayout(new BorderLayout());
        jpnThongTinKH.add(jpnAdd);
        jpnThongTinKH.validate();
        jpnThongTinKH.repaint();

        //Set Mã HĐ
        HoaDon hd = hoadonservice.find();
        String MHD = "PH" + String.valueOf(hd.getId() + 1);
        txtMHD.setText(MHD);

        //Set Ngày Tạo txtNgayTao
        Date createDate = new Date();
        txtNgayTao.setText(sdf.format(createDate));

        //Set CBB Khuyến Mãi
        dcbm = (DefaultComboBoxModel) cbbKM.getModel();
        Optional<List<DotKhuyenMai>> OPTdotkhuyenmai = dotkhuyenmaiservice.findByTrangThai("Áp dụng");
        if (!OPTdotkhuyenmai.isEmpty()) {
            if (!OPTdotkhuyenmai.get().isEmpty()) {
                for (DotKhuyenMai item : OPTdotkhuyenmai.get()) {
                    dcbm.addElement(item.getTen());
                }
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnAdd = new javax.swing.JPanel();
        btnADDKH = new javax.swing.JButton();
        jpnChiTietKH = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtKH = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtDC = new javax.swing.JTextField();
        jblThayDoi = new javax.swing.JLabel();
        jlbXoaKH = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtCapBac = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtThanhPho = new javax.swing.JTextField();
        txtMaKH = new javax.swing.JTextField();
        jComboBox3 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jpnThongTinKH = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSPMua = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtTotalTienSach = new javax.swing.JTextField();
        jlbThemSP = new javax.swing.JLabel();
        btnTangSoLuong = new javax.swing.JButton();
        btnGiamSoLuong = new javax.swing.JButton();
        BtnXoa = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtMHD = new javax.swing.JTextField();
        btnTaoHD = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtNhanVien = new javax.swing.JTextField();
        txtNgayTao = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbbKM = new javax.swing.JComboBox<>();
        txtPhanTram = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtGiaTriDonHang = new javax.swing.JTextField();
        lblLamMoi = new javax.swing.JLabel();
        txtMucGiamKH = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        btnADDKH.setBackground(new java.awt.Color(255, 204, 204));
        btnADDKH.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnADDKH.setForeground(new java.awt.Color(255, 255, 255));
        btnADDKH.setText("ADD");
        btnADDKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnADDKHMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnADDKHMouseEntered(evt);
            }
        });
        btnADDKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDKHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnAddLayout = new javax.swing.GroupLayout(jpnAdd);
        jpnAdd.setLayout(jpnAddLayout);
        jpnAddLayout.setHorizontalGroup(
            jpnAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnAddLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btnADDKH, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jpnAddLayout.setVerticalGroup(
            jpnAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnAddLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(btnADDKH, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jLabel1.setText(" Khách Hàng :");

        jLabel6.setText("SĐT :");

        jLabel7.setText("Địa Chỉ :");

        txtKH.setEditable(false);

        txtSDT.setEditable(false);

        txtDC.setEditable(false);

        jblThayDoi.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jblThayDoi.setText("Thay đổi địa chỉ");
        jblThayDoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jblThayDoiMouseClicked(evt);
            }
        });

        jlbXoaKH.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jlbXoaKH.setText("Xoá");
        jlbXoaKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbXoaKHMouseClicked(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N
        jLabel13.setText("Cấp bậc :");

        txtCapBac.setBackground(new java.awt.Color(242, 242, 242));
        txtCapBac.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtCapBac.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCapBac.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel14.setText("Thành phố :");

        txtThanhPho.setEditable(false);

        javax.swing.GroupLayout jpnChiTietKHLayout = new javax.swing.GroupLayout(jpnChiTietKH);
        jpnChiTietKH.setLayout(jpnChiTietKHLayout);
        jpnChiTietKHLayout.setHorizontalGroup(
            jpnChiTietKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnChiTietKHLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnChiTietKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnChiTietKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSDT, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                    .addComponent(txtDC)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnChiTietKHLayout.createSequentialGroup()
                        .addComponent(txtKH)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)))
                .addGroup(jpnChiTietKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnChiTietKHLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCapBac, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addComponent(jblThayDoi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlbXoaKH)
                        .addGap(10, 10, 10))
                    .addGroup(jpnChiTietKHLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtThanhPho)
                        .addContainerGap())))
        );
        jpnChiTietKHLayout.setVerticalGroup(
            jpnChiTietKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnChiTietKHLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jpnChiTietKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(jpnChiTietKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jblThayDoi)
                        .addComponent(jlbXoaKH)
                        .addComponent(jLabel13)
                        .addComponent(txtCapBac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jpnChiTietKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jpnChiTietKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jpnChiTietKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)
                        .addComponent(txtThanhPho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );

        txtMaKH.setText("jTextField3");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jpnThongTinKH.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin khách hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N
        jpnThongTinKH.setForeground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jpnThongTinKHLayout = new javax.swing.GroupLayout(jpnThongTinKH);
        jpnThongTinKH.setLayout(jpnThongTinKHLayout);
        jpnThongTinKHLayout.setHorizontalGroup(
            jpnThongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 656, Short.MAX_VALUE)
        );
        jpnThongTinKHLayout.setVerticalGroup(
            jpnThongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        tblSPMua.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tblSPMua.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Sách", "Số Lượng", "Đơn giá", "Thành tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSPMua);
        if (tblSPMua.getColumnModel().getColumnCount() > 0) {
            tblSPMua.getColumnModel().getColumn(0).setMinWidth(25);
            tblSPMua.getColumnModel().getColumn(0).setPreferredWidth(25);
            tblSPMua.getColumnModel().getColumn(0).setMaxWidth(25);
            tblSPMua.getColumnModel().getColumn(1).setPreferredWidth(155);
            tblSPMua.getColumnModel().getColumn(2).setMinWidth(60);
            tblSPMua.getColumnModel().getColumn(2).setPreferredWidth(60);
            tblSPMua.getColumnModel().getColumn(2).setMaxWidth(60);
            tblSPMua.getColumnModel().getColumn(3).setPreferredWidth(30);
            tblSPMua.getColumnModel().getColumn(4).setPreferredWidth(40);
        }

        jLabel4.setText("Tổng :");

        txtTotalTienSach.setEditable(false);
        txtTotalTienSach.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtTotalTienSach.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotalTienSach.setText("0");
        txtTotalTienSach.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtTotalTienSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalTienSachActionPerformed(evt);
            }
        });

        jlbThemSP.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N
        jlbThemSP.setText("Thêm Sản Phẩm");
        jlbThemSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbThemSPMouseClicked(evt);
            }
        });

        btnTangSoLuong.setBackground(new java.awt.Color(204, 204, 204));
        btnTangSoLuong.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnTangSoLuong.setText("Tăng");
        btnTangSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTangSoLuongActionPerformed(evt);
            }
        });

        btnGiamSoLuong.setBackground(new java.awt.Color(204, 204, 204));
        btnGiamSoLuong.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnGiamSoLuong.setText("Giảm");
        btnGiamSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGiamSoLuongActionPerformed(evt);
            }
        });

        BtnXoa.setBackground(new java.awt.Color(204, 204, 204));
        BtnXoa.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        BtnXoa.setText("Xoá");
        BtnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnXoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlbThemSP)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(btnTangSoLuong)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnGiamSoLuong)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(BtnXoa)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4)
                            .addGap(26, 26, 26)
                            .addComponent(txtTotalTienSach, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTangSoLuong)
                            .addComponent(btnGiamSoLuong)
                            .addComponent(BtnXoa)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jlbThemSP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotalTienSach, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("Mã Hoá Đơn :");

        txtMHD.setEditable(false);
        txtMHD.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        txtMHD.setBorder(null);
        txtMHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMHDActionPerformed(evt);
            }
        });

        btnTaoHD.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnTaoHD.setText("Tạo hoá đơn");
        btnTaoHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoHDActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N
        jLabel2.setText("Nhân viên:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N
        jLabel8.setText("Ngày tạo:");

        txtNhanVien.setEditable(false);
        txtNhanVien.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtNhanVien.setText("Tuấn Linh");
        txtNhanVien.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNhanVienActionPerformed(evt);
            }
        });

        txtNgayTao.setEditable(false);
        txtNgayTao.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtNgayTao.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel3.setText("Áp dụng khuyến mãi :");

        cbbKM.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbbKM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn chương trình khuyến mãi", "Không" }));
        cbbKM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbKMActionPerformed(evt);
            }
        });

        txtPhanTram.setEditable(false);
        txtPhanTram.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtPhanTram.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPhanTram.setText("0");
        txtPhanTram.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("%");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel11.setText("Giảm giá :");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel12.setText("Giá trị đơn hàng :");

        txtGiaTriDonHang.setEditable(false);
        txtGiaTriDonHang.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtGiaTriDonHang.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtGiaTriDonHang.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        lblLamMoi.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N
        lblLamMoi.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLamMoi.setText("làm mới");
        lblLamMoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLamMoiMouseClicked(evt);
            }
        });

        txtMucGiamKH.setEditable(false);
        txtMucGiamKH.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtMucGiamKH.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtMucGiamKH.setText("0");
        txtMucGiamKH.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel15.setText("%");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel16.setText("Mức giảm KH :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMHD, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(153, 153, 153)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNgayTao, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnTaoHD, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addGap(32, 32, 32)
                                            .addComponent(cbbKM, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(0, 0, Short.MAX_VALUE)
                                            .addComponent(jLabel16)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(57, 57, 57)
                                            .addComponent(txtPhanTram, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel9))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addComponent(txtGiaTriDonHang, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtMucGiamKH, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel15)))))
                            .addGap(22, 22, 22))))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpnThongTinKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNgayTao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(lblLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpnThongTinKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbbKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhanTram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMucGiamKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtGiaTriDonHang, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnTaoHD, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnADDKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDKHActionPerformed

    }//GEN-LAST:event_btnADDKHActionPerformed

    private void txtTotalTienSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalTienSachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalTienSachActionPerformed

    private void jlbXoaKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbXoaKHMouseClicked
        jpnThongTinKH.removeAll();
        jpnThongTinKH.setLayout(new BorderLayout());
        jpnThongTinKH.add(jpnAdd);
        jpnThongTinKH.validate();
        jpnThongTinKH.repaint();
        txtSDT.setText("");
        txtDC.setText("");
        txtMucGiamKH.setText("0");
        logicTinhTongTienSauKhiXoaKhachHang();


    }//GEN-LAST:event_jlbXoaKHMouseClicked

    private void jblThayDoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jblThayDoiMouseClicked
        Long idKh = Long.valueOf(txtMaKH.getText());
        new DanhSachDiaChiKhachHang(this, idKh).setVisible(true);
    }//GEN-LAST:event_jblThayDoiMouseClicked

    private void txtMHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMHDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMHDActionPerformed

    private void jlbThemSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbThemSPMouseClicked
        new AddBookToHDJframe(this).setVisible(true);
    }//GEN-LAST:event_jlbThemSPMouseClicked

    private void btnADDKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnADDKHMouseClicked
        new AddKHToHD(this).setVisible(true);
    }//GEN-LAST:event_btnADDKHMouseClicked

    private void btnADDKHMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnADDKHMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnADDKHMouseEntered

    private void btnTaoHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoHDActionPerformed
        HoaDon hdCoIDLonNhatTruocKhiThemHDMoi = hoadonservice.find();
        Long idCuaHDCoIDLonNhatHienTai = hdCoIDLonNhatTruocKhiThemHDMoi.getId();
        String maHDCoIDLonNhatHienTai  = hdCoIDLonNhatTruocKhiThemHDMoi.getMa();
        if(txtMHD.getText().equals(maHDCoIDLonNhatHienTai)){
            JOptionPane.showMessageDialog(this, "Mã Hoá đơn đã toàn tại. Vui lòng làm mới");
            return;
        }
        String maHD = txtMHD.getText();
        BigDecimal giatridonhang = null;
        if (!txtGiaTriDonHang.getText().equals("")) {
            giatridonhang = new BigDecimal(txtGiaTriDonHang.getText());

        }

        if (txtKH.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn Khách Hàng!");
            return;
        }
        //TÌm thông tin KH
        Long idKh = Long.valueOf(txtMaKH.getText());
        Optional<KhachHang> kh = khachhangservice.findByID(idKh);

        /////////////////
        if (danhsachchon.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng thêm sản phẩm vào hoá đơn!");
            return;
        }

        //LOGIC KHUYẾN MÃI
        Optional<List<DotKhuyenMai>> OPTdkm = dotkhuyenmaiservice.findAll();
        DotKhuyenMai dkm = new DotKhuyenMai();
        String chonKM = (String) cbbKM.getSelectedItem();
        if (chonKM.equals("Chọn chương trình khuyến mãi")) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn chương trình khuyến mãi");
            return;
        }
        if (chonKM.equals("Không")) {
            dkm = null;

        }
        if (!chonKM.equals("Không")) {
            for (DotKhuyenMai item : OPTdkm.get()) {
                if (chonKM.equals(item.getTen())) {
                    BeanUtils.copyProperties(item, dkm);
                }
            }
        }

        //LOGIC THANH TOÁN
        //logic khi trước khi thêm HĐ
        //Số lượng sách bán phải nhỏ hơn số lượng trong kho
        for (CartItem item : danhsachchon) {
            CTSach ctsach = ctsachservice.findById(item.getId());
            int soCTSachHienTai = ctsach.getSoLuong();
            if (soCTSachHienTai < 0) {
                JOptionPane.showMessageDialog(null, "Tên sách: "
                        + item.getName() + "  IDSách: " + item.getId() + " Đã vượt quá số lượng có thể bán. Vui lòng chọn lại");
                return;
            }
        }
        //Lưu HĐ
        try {
            Date createDate = sdf.parse(txtNgayTao.getText());
            Timestamp createdateDateTimestamp = new Timestamp(createDate.getTime());

            HoaDon hoadon = new HoaDon(0, NVLogin, maHD, giatridonhang, createdateDateTimestamp, new TrangThaiHoaDon(2, "Khởi tạo"), null, null, kh.get(), null, dkm);
            hoadonservice.save(hoadon);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Lỗi Nặng Đấy");
            return;
        }

        //SAU KHI THÊM HOÁ ĐƠN --> LƯU DỮ LIỆU VÀO HOÁ ĐƠN CHI TIẾT
        HoaDon hd = hoadonservice.find();
        if (idCuaHDCoIDLonNhatHienTai == hd.getId()) {
            JOptionPane.showMessageDialog(this, "Xảy ra lỗi khi thêm Hoa Đơn");
            return;
        }
        
        
        for (CartItem item : danhsachchon) {
            CTSach cts = ctsachservice.findById(item.getId());
            int soSachHienTaiTrongDB = cts.getSoLuong();
            int soSachConlaiSauKhiThemHD = soSachHienTaiTrongDB -item.getSoLuong();
            HoaDonChiTiet hdct = new HoaDonChiTiet(0, item.getSoLuong(), hd ,cts);
            chitiethoadonservice.save(hdct);
            ctsachservice.updateSoLuongCTSach(item.getId(), soSachConlaiSauKhiThemHD);
        }
        JOptionPane.showMessageDialog(this, "Thêm Hoá đơn Thành công");
        new DetailHDJFrame(hd.getId()).setVisible(true);
        qlhdJframe.dispose();

    }//GEN-LAST:event_btnTaoHDActionPerformed

    private void txtNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNhanVienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNhanVienActionPerformed

    private void cbbKMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbKMActionPerformed
        dcbm = (DefaultComboBoxModel) cbbKM.getModel();
        String chon = (String) dcbm.getSelectedItem();
        System.out.println(chon);
        Optional<List<DotKhuyenMai>> OPTdotkhuyenmai = dotkhuyenmaiservice.findByTrangThai("Áp dụng");
        Double mucgiamkh = Double.valueOf(txtMucGiamKH.getText());
        Double totalTienSach = Double.valueOf(txtTotalTienSach.getText());
        if (!chon.equals("Chọn chương trình khuyến mãi")) {
            for (DotKhuyenMai item : OPTdotkhuyenmai.get()) {
                if (chon.equals(item.getTen())) {
                    txtPhanTram.setText(String.valueOf(item.getPhanTramKM()));

                    Double giaTriDonHang = totalTienSach - (totalTienSach * item.getPhanTramKM() / 100) - (totalTienSach * mucgiamkh / 100);
                    txtGiaTriDonHang.setText(String.valueOf(giaTriDonHang));
                }
            }
        }
        if (chon.equals("Chọn chương trình khuyến mãi") || chon.equals("Không")) {
            txtPhanTram.setText("0");
            Double giaTriDonHang = totalTienSach - (totalTienSach * mucgiamkh / 100);
            txtGiaTriDonHang.setText(String.valueOf(giaTriDonHang));
        }
    }//GEN-LAST:event_cbbKMActionPerformed

    private void btnTangSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTangSoLuongActionPerformed
        dtm = (DefaultTableModel) tblSPMua.getModel();

        int index = tblSPMua.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "xin mời chọn sản phẩm");
            return;
        }

        //Số lượng hiên tại của sản phảm được chọn
        int soluonghientaitronggiohang = danhsachchon.get(index).getSoLuong();
        //tăng số lương sau khi ấn 
        int soluongsaukhiantang = soluonghientaitronggiohang + 1;
        danhsachchon.get(index).setSoLuong(soluongsaukhiantang);

        //Set số lượng sách còn lại trong db sau khi tăng sản phẩm 
        Long idCTSach = (Long) tblSPMua.getValueAt(index, 0);
        CTSach cts = ctsachservice.findById(idCTSach);
        int soluongsachhientaitrongdb = cts.getSoLuong();
        int soluongsachconlaitrongdbsaukhiantang = soluongsachhientaitrongdb - 1;
        ctsachservice.updateSoLuongCTSach(idCTSach, soluongsachconlaitrongdbsaukhiantang);

        loadToTableSPMua(danhsachchon);
        //Logic Tổng tiền hoá đơn sau khi tăng hoá đơn
        logicTinhTongTienSauKhiTangOrGiamOrXoaSPTrongBang();


    }//GEN-LAST:event_btnTangSoLuongActionPerformed

    private void btnGiamSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGiamSoLuongActionPerformed
        dtm = (DefaultTableModel) tblSPMua.getModel();

        int index = tblSPMua.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "xin mời chọn sản phẩm");
            return;
        }
        System.out.println(index);
        //Số lượng hiên tại của sản phảm được chọn
        int soluonghientai = danhsachchon.get(index).getSoLuong();
        //giam số lương sau khi ấn 
        int soLuongSachTrongGioGangSauKhiAnGiam = soluonghientai - 1;
        danhsachchon.get(index).setSoLuong(soLuongSachTrongGioGangSauKhiAnGiam);
        if (danhsachchon.get(index).getSoLuong() == 0) {
            danhsachchon.remove(danhsachchon.get(index));
        }
        //Set số lượng sách còn lại trong db sau khi giảm sản phẩm trong giỏ hàng
        Long idCTSach = (Long) tblSPMua.getValueAt(index, 0);
        CTSach cts = ctsachservice.findById(idCTSach);
        int soluongsachhientaitrongdb = cts.getSoLuong();
        int soLuongSachConLaiTringDBSauKhiAnGiam = soluongsachhientaitrongdb + 1;
        ctsachservice.updateSoLuongCTSach(idCTSach, soLuongSachConLaiTringDBSauKhiAnGiam);
        loadToTableSPMua(danhsachchon);

        //Logic Tổng tiền hoá đơn sau khi giảm sản phẩm
        logicTinhTongTienSauKhiTangOrGiamOrXoaSPTrongBang();
    }//GEN-LAST:event_btnGiamSoLuongActionPerformed

    private void BtnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnXoaActionPerformed
        int index = tblSPMua.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "xin mời chọn sản phẩm");
            return;
        }

        //Set số lượng sách trong Db sau khi xoá sách trong giỏ hàng
        Long idCTSach = (Long) tblSPMua.getValueAt(index, 0);
        int soLuongHienTaiTrongGioHang = (int) tblSPMua.getValueAt(index, 2);
        CTSach cts = ctsachservice.findById(idCTSach);
        int soLuongSachHienTaiTrongDb = cts.getSoLuong();
        int soLuongSachTrongDBSauKhiXoaSanPhamTrongGioHang = soLuongSachHienTaiTrongDb + soLuongHienTaiTrongGioHang;
        ctsachservice.updateSoLuongCTSach(idCTSach, soLuongSachTrongDBSauKhiXoaSanPhamTrongGioHang);

        danhsachchon.remove(danhsachchon.get(index));

        loadToTableSPMua(danhsachchon);

        //Logic Tổng tiền hoá đơn
        logicTinhTongTienSauKhiTangOrGiamOrXoaSPTrongBang();

    }//GEN-LAST:event_BtnXoaActionPerformed

    private void lblLamMoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLamMoiMouseClicked
        HoaDon hd = hoadonservice.find();
        String MHD = "PH" + String.valueOf(hd.getId() + 1);
        txtMHD.setText(MHD);
    }//GEN-LAST:event_lblLamMoiMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnXoa;
    private javax.swing.JButton btnADDKH;
    private javax.swing.JButton btnGiamSoLuong;
    private javax.swing.JButton btnTangSoLuong;
    private javax.swing.JButton btnTaoHD;
    private javax.swing.JComboBox<String> cbbKM;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jblThayDoi;
    private javax.swing.JLabel jlbThemSP;
    private javax.swing.JLabel jlbXoaKH;
    public javax.swing.JPanel jpnAdd;
    public javax.swing.JPanel jpnChiTietKH;
    public javax.swing.JPanel jpnThongTinKH;
    private javax.swing.JLabel lblLamMoi;
    public javax.swing.JTable tblSPMua;
    public javax.swing.JTextField txtCapBac;
    public javax.swing.JTextField txtDC;
    public javax.swing.JTextField txtGiaTriDonHang;
    public javax.swing.JTextField txtKH;
    private javax.swing.JTextField txtMHD;
    public javax.swing.JTextField txtMaKH;
    public javax.swing.JTextField txtMucGiamKH;
    private javax.swing.JTextField txtNgayTao;
    private javax.swing.JTextField txtNhanVien;
    private javax.swing.JTextField txtPhanTram;
    public javax.swing.JTextField txtSDT;
    public javax.swing.JTextField txtThanhPho;
    public javax.swing.JTextField txtTotalTienSach;
    // End of variables declaration//GEN-END:variables

    public void loadToTableSPMua(List<CartItem> list) {
        dtm = (DefaultTableModel) tblSPMua.getModel();
        dtm.setRowCount(0);
        for (CartItem cartItem : list) {
            BigDecimal thanhTien = cartItem.getDonGia().multiply(BigDecimal.valueOf(cartItem.getSoLuong()));
            dtm.addRow(new Object[]{cartItem.getId(), cartItem.getName(), cartItem.getSoLuong(), cartItem.getDonGia(), thanhTien});
        }
        int rowcount = dtm.getRowCount();
        BigDecimal total = new BigDecimal(0);
        for (int i = 0; i < rowcount; i++) {
            BigDecimal item = (BigDecimal) tblSPMua.getValueAt(i, 4);
            System.out.println("item: " + item);
            total = item.add(total);
            System.out.println("total: " + total);

        }
        txtTotalTienSach.setText(String.valueOf(total));
    }

    public void logicTinhTongTienSauKhiTangOrGiamOrXoaSPTrongBang() {
        Double tongtiensach = Double.valueOf(txtTotalTienSach.getText());
        Double tongtienhoadon;
        if (txtMucGiamKH.getText().equals("0") && txtPhanTram.getText().equals("0")) {
            txtGiaTriDonHang.setText(txtTotalTienSach.getText());
        }
        if (!txtPhanTram.getText().equals("0") && txtMucGiamKH.getText().equals("0")) {
            Double phamtram = Double.valueOf(txtPhanTram.getText());
            tongtienhoadon = tongtiensach - tongtiensach * phamtram / 100;
            txtGiaTriDonHang.setText(String.valueOf(tongtienhoadon));
        }
        if (txtPhanTram.getText().equals("0") && !txtMucGiamKH.getText().equals("0")) {
            Double mucgiam = Double.valueOf(txtMucGiamKH.getText());
            System.out.println(mucgiam + "abcasd");
            tongtienhoadon = tongtiensach - tongtiensach * mucgiam / 100;
            txtGiaTriDonHang.setText(String.valueOf(tongtienhoadon));
        }
        if (!txtPhanTram.getText().equals("0") && !txtMucGiamKH.getText().equals("0")) {
            Double phamtram = Double.valueOf(txtPhanTram.getText());
            Double mucgiam = Double.valueOf(txtMucGiamKH.getText());

            tongtienhoadon = tongtiensach - tongtiensach * phamtram / 100 - tongtiensach * mucgiam / 100;
            txtGiaTriDonHang.setText(String.valueOf(tongtienhoadon));
        }
    }

    public void logicTinhTongTienSauKhiXoaKhachHang() {
        if (txtTotalTienSach.getText().equals("0")) {
            return;
        }
        if (txtPhanTram.getText().equals("0")) {
            txtGiaTriDonHang.setText(txtTotalTienSach.getText());
        }
        if (!txtPhanTram.getText().equals("0")) {
            Double phantram = Double.valueOf(txtPhanTram.getText());
            Double totalTienSach = Double.valueOf(txtTotalTienSach.getText());
            Double giatridonhang = totalTienSach - totalTienSach * phantram / 100;
            txtGiaTriDonHang.setText(String.valueOf(giatridonhang));
        }
    }

    public void logicTinhTongTienSauKhiThemKhachHang() {
        if (txtTotalTienSach.getText().equals("0")) {
            return;
        }
        if (txtPhanTram.getText().equals("0")) {
            Double mucgiam = Double.valueOf(txtMucGiamKH.getText());
            Double totalTienSach = Double.valueOf(txtTotalTienSach.getText());
            Double giatridonhang = totalTienSach - totalTienSach * mucgiam / 100;
            txtGiaTriDonHang.setText(String.valueOf(giatridonhang));
        }
        if (!txtPhanTram.getText().equals("0")) {
            Double mucgiam = Double.valueOf(txtMucGiamKH.getText());
            Double phantram = Double.valueOf(txtPhanTram.getText());
            Double totalTienSach = Double.valueOf(txtTotalTienSach.getText());
            Double giatridonhang = totalTienSach - totalTienSach * phantram / 100 - totalTienSach * mucgiam / 100;
            txtGiaTriDonHang.setText(String.valueOf(giatridonhang));
        }
    }
}
