/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.duan1.View.QLHD;

import com.mycompany.duan1.Entity.KhachHang;
import com.mycompany.duan1.Entity.ThongTinChiTiet;
import com.mycompany.duan1.Service.Impl.KhachHangServiceImpl;
import com.mycompany.duan1.Service.Impl.ThongTinChiTietServiceImpl;
import com.mycompany.duan1.Service.KhachHangService;
import com.mycompany.duan1.Service.ThongTinChiTietService;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Optional;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class DanhSachDiaChiKhachHang extends javax.swing.JFrame {

    private createHDJPanel createHDjpn;
    private long idKH;
    private KhachHangService khachhangservice = new KhachHangServiceImpl();
    private ThongTinChiTietService ttctservice = new ThongTinChiTietServiceImpl();

    DefaultTableModel dtm;
    Date createDate = new Date();
    SimpleDateFormat dateformat = new SimpleDateFormat("HH:mm dd/MM/yyyy");

    public DanhSachDiaChiKhachHang() {
        initComponents();
        loadDataTotable();
    }

    public DanhSachDiaChiKhachHang(createHDJPanel createHDjpn, Long idKH) {
        this.createHDjpn = createHDjpn;
        this.idKH = idKH;

        initComponents();
        setLocationRelativeTo(null);
        loadDataTotable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblThongTinChiTiet = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTP = new javax.swing.JTextField();
        txtDC = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtNgayTao = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblThongTinChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "SĐT", "Địa chỉ", "Thành phố", "Ngày tạo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblThongTinChiTiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThongTinChiTietMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblThongTinChiTiet);

        jLabel1.setText("SĐT :");

        jLabel2.setText("Địa chỉ :");

        jLabel3.setText("Thành phố :");

        jLabel4.setText("Ngày tạo :");

        txtNgayTao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNgayTaoActionPerformed(evt);
            }
        });

        btnThem.setText("Thêm");
        btnThem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThemMouseClicked(evt);
            }
        });
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel5.setText("GetTimeNow");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNgayTao, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5))
                            .addComponent(txtSDT, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                            .addComponent(txtDC)
                            .addComponent(txtTP))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNgayTao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNgayTaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNgayTaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNgayTaoActionPerformed

    private void tblThongTinChiTietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThongTinChiTietMouseClicked
        int index = tblThongTinChiTiet.getSelectedRow();

        Optional<KhachHang> kh = khachhangservice.findByID(idKH);
        Long idTTCT = (Long) tblThongTinChiTiet.getValueAt(index, 0);
        String SDT = (String) tblThongTinChiTiet.getValueAt(index, 1);
        String diachi = (String) tblThongTinChiTiet.getValueAt(index, 2);
        String thanhpho = (String) tblThongTinChiTiet.getValueAt(index, 3);

        try {
            Date createdDate = dateformat.parse((String) tblThongTinChiTiet.getValueAt(index, 4));
            Timestamp timestampCreateDate = new Timestamp(createdDate.getTime());
            ThongTinChiTiet ttct = new ThongTinChiTiet(idTTCT, SDT, diachi, timestampCreateDate, thanhpho,1, kh.get());
            ttctservice.updateAllTrangThai(idKH);
            ttctservice.update(ttct);

        } catch (Exception e) {
        }
        createHDjpn.txtSDT.setText(SDT);
        createHDjpn.txtDC.setText(diachi);

        this.dispose();

    }//GEN-LAST:event_tblThongTinChiTietMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnThemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemMouseClicked

    }//GEN-LAST:event_btnThemMouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked

        String formattedCreatedDate = dateformat.format(createDate);
        txtNgayTao.setText(formattedCreatedDate);
    }//GEN-LAST:event_jLabel5MouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        String SDT = txtSDT.getText();
        String DC = txtDC.getText();
        String Tp = txtTP.getText();
        String createDate = txtNgayTao.getText();
        try {
            // Chuyển đổi chuỗi thành java.util.Date
            Date parsedCreateDate = dateformat.parse(createDate);
            // Chuyển đổi thành kiểu dữ liệu java.sql.Timestamp
            Timestamp timestamp = new Timestamp(parsedCreateDate.getTime());
            // Sử dụng biến timestamp để lưu vào SQL Server
            // Tiếp theo, bạn có thể sử dụng JDBC để thực hiện lưu trữ vào SQL Server.
            // Ví dụ: PreparedStatement, Connection, ...
            Optional<KhachHang> kh = khachhangservice.findByID(idKH);
            if (kh.isPresent()) {
                ttctservice.Save(new ThongTinChiTiet(0, SDT, DC, timestamp, Tp,1, kh.get()));
            }
            loadDataTotable();
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DanhSachDiaChiKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DanhSachDiaChiKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DanhSachDiaChiKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DanhSachDiaChiKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DanhSachDiaChiKhachHang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnThem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblThongTinChiTiet;
    private javax.swing.JTextField txtDC;
    private javax.swing.JTextField txtNgayTao;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTP;
    // End of variables declaration//GEN-END:variables

    private void loadDataTotable() {
        dtm = (DefaultTableModel) tblThongTinChiTiet.getModel();
        dtm.setRowCount(0);
        Optional<KhachHang> kh = khachhangservice.findByID(idKH);
        List<ThongTinChiTiet> listTTCT;
        if (kh.isPresent()) {
            listTTCT = kh.get().getCtkh();
            for (ThongTinChiTiet ttct : listTTCT) {
                dtm.addRow(new Object[]{ttct.getId(), ttct.getSDT(),
                    ttct.getDiaChi(), ttct.getThanhPho(), dateformat.format(ttct.getNgayTao())});
            }
        }

    }
}
